// Generated by CoffeeScript 1.3.3
(function() {
  var Human,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Human = (function() {

    function Human(body, options) {
      var me;
      this.body = body;
      this.options = options;
      this.speed = this.options.speed ? this.options.speed : 50;
      this.actions = {
        "default": true
      };
      me = this;
      $(document).on('keydown', function(e) {
        console.log(e.keyCode);
        me.actions[e.keyCode] = true;
        return console.log(me.actions);
      });
      $(document).on('keyup', function(e) {});
    }

    Human.prototype.update = function(modifier) {
      if (__indexOf.call(this.actions, '38') >= 0) {
        console.log("help");
        return this.body.move(new Particle(this.body.loc.x, this.body.loc.y - this.speed * modifier));
      } else if (__indexOf.call(this.actions, 40) >= 0) {
        return this.body.move(new Particle(this.body.loc.x, this.body.loc.y + this.speed * modifier));
      } else if (__indexOf.call(this.actions, 37) >= 0) {
        return this.body.move(new Particle(this.body.loc.x - this.speed * modifier, this.body.loc.y));
      } else if (__indexOf.call(this.actions, 39) >= 0) {
        return this.body.move(new Particle(this.body.loc.x + this.speed * modifier, this.body.loc.y));
      } else {

      }
    };

    return Human;

  })();

}).call(this);
